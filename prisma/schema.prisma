// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Books {
  id          Int                  @id @default(autoincrement())
  title       String               @db.VarChar(80)
  author      String               @db.VarChar(80)
  description String               @db.Text
  year        Int?
  imageURL    String               @db.VarChar(255) @map("image_url")
  createdAt   DateTime             @default(now()) @map("created_at")
  updatedAt   DateTime             @updatedAt @map("updated_at")
  usersFav    UsersFavoriteBooks[]

  @@map("books")
}

enum Role {
  USER
  ADMIN
}

model User {
  id        Int                  @id @default(autoincrement())
  email     String               @unique
  name      String?
  password  String
  role      Role                 @default(USER)
  createdAt DateTime             @default(now()) @map("created_at")
  updatedAt DateTime             @updatedAt @map("updated_at")
  favBooks  UsersFavoriteBooks[]

  @@map("users")
}

model UsersFavoriteBooks {
  book      Books    @relation(fields: [bookId], references: [id])
  bookId    Int      @map("book_id")
  user      User     @relation(fields: [userId], references: [id])
  userId    Int      @map("user_id")
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  @@id([bookId, userId])
  @@map("users_favorite_books")
}
